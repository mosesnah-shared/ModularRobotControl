%% (--) Initialization
clear all; close all; clc;

%% The maximum torque 
tau_max = [ 320, 320, 176, 176, 110, 40, 40 ]';

% Set figure size and attach robot to simulation
robot = iiwa14( 'high' );
robot.init( );

% Compare with two configuration
q1 = [   -3.21, 46.19000, 17.52000, -87.16, -5.03, -37.73, 0.0] * pi/180;
q2 = [ 0.0,  1.63126,  0.66563,   0.08546, -0.05718,  0.08614, -0.45598];

% The Jacobians of this posture
JH1 = robot.getHybridJacobian( q1 ); M1 = robot.getMassMatrix( q1 );
JH2 = robot.getHybridJacobian( q2 ); M2 = robot.getMassMatrix( q2 );

Lambda1_inv = JH1 * inv( M1 ) * JH1';
Lambda2_inv = JH2 * inv( M2 ) * JH2';

% Singular Values
sing1 = min( svd( Lambda1_inv ) );
sing2 = min( svd( Lambda2_inv ) );

% Get the first row of the Jacobian
JH1_row = JH1( 1, : );
JH2_row = JH2( 1, : );

% Animation
anim = Animation( 'Dimension', 3, 'xLim', [-0.2,1.0], 'yLim', [-0.6,0.6], 'zLim', [0.0,1.2] );
anim.init( );
anim.attachRobot( robot )  

robot.updateKinematics( q2 );
anim.update( 0 );

ans1 = min( tau_max./abs( JH1_row' ) );
ans2 = min( tau_max./abs( JH2_row' ) );

set( anim.hAxes, 'visible', 'off' )
view( 180, 0 );

%% Load the dataset
data1 = parse_txt( 'data/singularity/sing_exp_9deg.txt' , 0 );
data2 = parse_txt( 'data/singularity/sing_exp_18deg.txt', 0 );
data3 = parse_txt( 'data/singularity/sing_exp_28deg.txt', 0 );

%% Plotting the main result
t_arr1 = data1( :, 1 ); tau_ext1 = data1( :, 2:8 ); q_arr1 = data1( :, 9:15 );
t_arr2 = data2( :, 1 ); tau_ext2 = data2( :, 2:8 ); q_arr2 = data2( :, 9:15 );
t_arr3 = data3( :, 1 ); tau_ext3 = data3( :, 2:8 ); q_arr3 = data3( :, 9:15 );

%% Analytical Calculation of F_ext
h = 1.3;
L = 0.5*sqrt( 0.31^2 + 1.83^2 );
m = 31.0;
g = 9.81;
alpha = atan( 31/183 );
F_ext = m*g*(L/h)*sin( [ 19, 29 ]*pi/180 - alpha );
F_ext
%% Plotting the Torque Profile

% Excluding the first plot, as the force was too small
a2 = subplot( 1, 2, 1 );
hold on
plot( a2, t_arr2, abs( tau_ext2./tau_max' * 100) );
set( a2, 'ylim', [0, 4], 'xlim', [ 100, 108], 'xtick', 100:2:108, 'xticklabel', 0:2:8, 'fontsize', 40 )
xlabel( 'Time (s)', 'fontsize', 40)
ylabel( 'Saturation Rate (\%)', 'fontsize', 40)

a3 = subplot( 1, 2, 2 );
hold on
plot( a3, t_arr3, abs( tau_ext3./tau_max' * 100) );
set( a3, 'ylim', [0, 4], 'xlim', [ 100, 108], 'xtick', 100:2:108, 'xticklabel', 0:2:8, 'fontsize', 40 )
xlabel( 'Time (s)', 'fontsize', 40)
ylabel( 'Saturation Rate (\%)', 'fontsize', 40)

% set( a3, 'yticklabel', {} )

%% Plotting the Torque Profile if F_ext is 

F_ext1 = 35; F_ext2 = 72;

% Find the first and second time
T1 = 100; T2 = 108;
idx2i = find( min( abs( t_arr2 - T1 ) ) == abs( t_arr2 - T1 )  );
idx2f = find( min( abs( t_arr2 - T2 ) ) == abs( t_arr2 - T2 )  );

idx3i = find( min( abs( t_arr3 - T1 ) ) == abs( t_arr3 - T1 )  );
idx3f = find( min( abs( t_arr3 - T2 ) ) == abs( t_arr3 - T2 )  );

J1 = zeros( 6, 7, idx2f-idx2i+1 );
J2 = zeros( 6, 7, idx3f-idx3i+1 );

tau1_imag = zeros( 7, idx2f-idx2i+1 );
tau2_imag = zeros( 7, idx3f-idx3i+1 );

for i = 1 : idx2f-idx2i+1
    J1( :, : , i ) = robot.getHybridJacobian( q1 );
    tau1_imag( :, i ) = J1( :, : , i )' * [ F_ext1, 0, 0, 0, 0, 0 ]';
end

for i = 1 : idx3f-idx3i+1
    J2( :, : , i ) = robot.getHybridJacobian( q1 );
    tau2_imag( :, i ) = J2( :, : , i )' * [ F_ext2, 0, 0, 0, 0, 0 ]';
end

% Excluding the first plot, as the force was too small
a2 = subplot( 1, 2, 1 );
hold on
plot( a2, t_arr3, abs( tau_ext3./tau_max' * 100) );
set( a2, 'ylim', [0, 12], 'xlim', [ 100, 108], 'xtick', 100:2:108, 'xticklabel', 0:2:8, 'fontsize', 40 )
xlabel( 'Time (s)', 'fontsize', 40)
ylabel( 'Saturation Rate (\%)', 'fontsize', 40)


a3 = subplot( 1, 2, 2 );
hold on
plot( a3, t_arr3( idx3i:idx3f ), abs( tau2_imag./tau_max * 100) )
set( a3, 'xlim', [ 100, 108], 'xtick', 100:2:108, 'xticklabel', 0:2:8, 'fontsize', 40 )
xlabel( 'Time (s)', 'fontsize', 40)
ylabel( 'Saturation Rate (\%)', 'fontsize', 40)

